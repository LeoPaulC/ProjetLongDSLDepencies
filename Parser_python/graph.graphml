<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns='http://graphml.graphdrawing.org/xmlns'>
	<key id="d0" for="node" attr.name="weight" attr.type="string"/>
	<key id="d1" for="edge" attr.name="weight" attr.type="string"/>
<graph id="G" edgedefault="directed">

<node id="neworder">
<data key="d0">"neworder"</data>
</node>
<edge source="neworder" target="neworder">
<data key="d1">
ww;ORDERS(*).* 
ww;NEW_ORDER(*).* 
ww;ORDERLINE(*).* 
ww;DISTRICT(['dId', 'wId']).*
neworder.d_id = neworder.d_id
neworder.ol_i_id = neworder.ol_i_id


</data>
</edge>
<node id="payment">
<data key="d0">"payment"</data>
</node>
<edge source="payment" target="payment">
<data key="d1">
ww;HISTORY(*).* 
wr;DISTRICT(['dId', 'wId']).*
rw;DISTRICT(['dId', 'wId']).*
ww;WAREHOUSE(['wId']).*
ww;CUSTOMER(['cId', 'dId', 'wId']).*
payment.w_id = payment.w_id
payment.d_id = payment.d_id
payment.c_id = payment.c_id


</data>
</edge>
<node id="payment">
<data key="d0">"payment"</data>
</node>
<edge source="payment" target="orderstatus">
<data key="d1">
wr;CUSTOMER(['cId', 'dId', 'wId']).*
payment.c_w_id = orderstatus.w_Id
payment.c_d_id = orderstatus.d_Id
payment.c_id = orderstatus.c_id


</data>
</edge>
<node id="delivery">
<data key="d0">"delivery"</data>
</node>
<edge source="delivery" target="orderstatus">
<data key="d1">
wr;CUSTOMER(['cId', 'dId', 'wId']).*
wr;ORDERLINE(['oId', 'dId', 'wId', 'number']).oId
wr;ORDERLINE(['oId', 'dId', 'wId', 'number']).dId
wr;ORDERLINE(['oId', 'dId', 'wId', 'number']).wId
delivery.d_id = orderstatus.d_Id
delivery.c_id = orderstatus.c_id
delivery.w_Id = orderstatus.w_Id


</data>
</edge>
<node id="payment">
<data key="d0">"payment"</data>
</node>
<edge source="payment" target="neworder">
<data key="d1">
wr;CUSTOMER(['cId', 'dId', 'wId']).*
wr;WAREHOUSE(['wId']).*
rw;DISTRICT(['dId', 'wId']).*
ww;DISTRICT(['dId', 'wId']).*
payment.w_id = neworder.w_id
payment.d_id = neworder.d_id
payment.c_d_id = neworder.d_id
payment.c_id = neworder.c_Id


</data>
</edge>
<node id="delivery">
<data key="d0">"delivery"</data>
</node>
<edge source="delivery" target="neworder">
<data key="d1">
wr;CUSTOMER(['cId', 'dId', 'wId']).*
delivery.d_id = neworder.d_id
delivery.c_id = neworder.c_Id


</data>
</edge>
<node id="neworder">
<data key="d0">"neworder"</data>
</node>
<edge source="neworder" target="stocklevel">
<data key="d1">
wr;DISTRICT(['dId', 'wId']).*
wr;STOCK(['iId', 'wId']).*
neworder.d_id = stocklevel.d_id
neworder.w_id = stocklevel.w_id
neworder.ol_supply_w_id = stocklevel.w_id


</data>
</edge>
<node id="payment">
<data key="d0">"payment"</data>
</node>
<edge source="payment" target="stocklevel">
<data key="d1">
wr;DISTRICT(['dId', 'wId']).*
payment.w_id = stocklevel.w_id
payment.d_id = stocklevel.d_id


</data>
</edge>
<node id="delivery">
<data key="d0">"delivery"</data>
</node>
<edge source="delivery" target="stocklevel">
<data key="d1">
wr;ORDERLINE(['oId', 'dId', 'wId', 'number']).oId
wr;ORDERLINE(['oId', 'dId', 'wId', 'number']).dId
wr;ORDERLINE(['oId', 'dId', 'wId', 'number']).wId
delivery.d_id = stocklevel.d_id
delivery.w_id = stocklevel.w_id


</data>
</edge>
<node id="neworder">
<data key="d0">"neworder"</data>
</node>
<edge source="neworder" target="payment">
<data key="d1">
wr;DISTRICT(['dId', 'wId']).*
rw;WAREHOUSE(['wId']).*
rw;CUSTOMER(['cId', 'dId', 'wId']).*
neworder.d_id = payment.d_id
neworder.d_id = payment.c_d_id
neworder.c_Id = payment.c_id
neworder.w_id = payment.w_id


</data>
</edge>
<node id="delivery">
<data key="d0">"delivery"</data>
</node>
<edge source="delivery" target="payment">
<data key="d1">
wr;CUSTOMER(['cId', 'dId', 'wId']).*
delivery.d_id = payment.c_d_id
delivery.c_id = payment.c_id


</data>
</edge>
<node id="delivery">
<data key="d0">"delivery"</data>
</node>
<edge source="delivery" target="delivery">
<data key="d1">
wr;ORDERLINE(['oId', 'dId', 'wId', 'number']).oId
wr;ORDERLINE(['oId', 'dId', 'wId', 'number']).wId
rw;ORDERLINE(['oId', 'dId', 'wId', 'number']).wId
rw;ORDERLINE(['oId', 'dId', 'wId', 'number']).oId
ww;ORDERS(['oId', 'dId', 'wId']).*
ww;ORDERLINE(['oId', 'dId', 'wId', 'number']).dId
delivery.w_id = delivery.w_id
delivery.d_id = delivery.d_id


</data>
</edge>
<node id="stocklevel">
<data key="d0">"stocklevel"</data>
</node>
<edge source="stocklevel" target="neworder">
<data key="d1">
rw;DISTRICT(['dId', 'wId']).*
rw;STOCK(['iId', 'wId']).*
stocklevel.w_id = neworder.w_id
stocklevel.w_id = neworder.ol_supply_w_id
stocklevel.d_id = neworder.d_id


</data>
</edge>
<node id="orderstatus">
<data key="d0">"orderstatus"</data>
</node>
<edge source="orderstatus" target="payment">
<data key="d1">
rw;CUSTOMER(['cId', 'dId', 'wId']).*
orderstatus.d_Id = payment.c_d_id
orderstatus.w_Id = payment.c_w_id
orderstatus.c_id = payment.c_id


</data>
</edge>
<node id="stocklevel">
<data key="d0">"stocklevel"</data>
</node>
<edge source="stocklevel" target="payment">
<data key="d1">
rw;DISTRICT(['dId', 'wId']).*
stocklevel.w_id = payment.w_id
stocklevel.d_id = payment.d_id


</data>
</edge>
<node id="orderstatus">
<data key="d0">"orderstatus"</data>
</node>
<edge source="orderstatus" target="delivery">
<data key="d1">
rw;ORDERLINE(['oId', 'dId', 'wId', 'number']).dId
rw;ORDERLINE(['oId', 'dId', 'wId', 'number']).wId
rw;ORDERLINE(['oId', 'dId', 'wId', 'number']).oId
rw;CUSTOMER(['cId', 'dId', 'wId']).*
orderstatus.d_Id = delivery.d_id
orderstatus.w_Id = delivery.w_Id
orderstatus.c_id = delivery.c_id


</data>
</edge>
<node id="neworder">
<data key="d0">"neworder"</data>
</node>
<edge source="neworder" target="delivery">
<data key="d1">
rw;CUSTOMER(['cId', 'dId', 'wId']).*
neworder.d_id = delivery.d_id
neworder.c_Id = delivery.c_id


</data>
</edge>
<node id="stocklevel">
<data key="d0">"stocklevel"</data>
</node>
<edge source="stocklevel" target="delivery">
<data key="d1">
rw;ORDERLINE(['oId', 'dId', 'wId', 'number']).wId
rw;ORDERLINE(['oId', 'dId', 'wId', 'number']).dId
rw;ORDERLINE(['oId', 'dId', 'wId', 'number']).oId
stocklevel.w_id = delivery.w_id
stocklevel.d_id = delivery.d_id


</data>
</edge>
<node id="payment">
<data key="d0">"payment"</data>
</node>
<edge source="payment" target="delivery">
<data key="d1">
rw;CUSTOMER(['cId', 'dId', 'wId']).*
payment.c_id = delivery.c_id
payment.c_d_id = delivery.d_id


</data>
</edge></graph>
	</graphml>