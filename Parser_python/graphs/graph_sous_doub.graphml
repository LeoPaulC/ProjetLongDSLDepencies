<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns='http://graphml.graphdrawing.org/xmlns'>
	<key id="d0" for="node" attr.name="weight" attr.type="string"/>
	<key id="d1" for="edge" attr.name="weight" attr.type="string"/>
<graph id="G" edgedefault="directed">

<node id="neworder">
<data key="d0">"neworder"</data>
</node>
<edge source="neworder" target="neworder">
<data key="d1">
ww,ORDERS(['oId', 'dId', 'wId']).*


</data>
</edge>ww,NEW_ORDER(['oId']).*


</data>
</edge>ww,ORDERLINE(['oId', 'dId', 'wId', 'number']).*


</data>
</edge>ww,DISTRICT(['dId', 'wId']).nextOrdId


</data>
</edge>ww,STOCK(['iId', 'wId']).quantity


</data>
</edge>neworder.w_id = neworder.w_id


</data>
</edge>neworder.d_id = neworder.d_id


</data>
</edge>neworder.ol_i_id = neworder.ol_i_id


</data>
</edge>
<node id="payment">
<data key="d0">"payment"</data>
</node>
<edge source="payment" target="orderstatus">
<data key="d1">
wr,CUSTOMER(['cId', 'dId', 'wId']).paymtCnt


</data>
</edge>wr,CUSTOMER(['cId', 'dId', 'wId']).YTDPaymt


</data>
</edge>wr,CUSTOMER(['cId', 'dId', 'wId']).balance


</data>
</edge>payment.w_id = orderstatus.w_Id


</data>
</edge>payment.c_d_id = orderstatus.d_Id


</data>
</edge>payment.c_id = orderstatus.c_id


</data>
</edge>
<node id="delivery">
<data key="d0">"delivery"</data>
</node>
<edge source="delivery" target="orderstatus">
<data key="d1">
wr,CUSTOMER(['cId', 'dId', 'wId']).deliveryCnt


</data>
</edge>wr,CUSTOMER(['cId', 'dId', 'wId']).balance


</data>
</edge>wr,ORDERLINE(['oId', 'dId', 'wId', 'number']).deliveryDate


</data>
</edge>delivery.d_id = orderstatus.d_Id


</data>
</edge>delivery.w_id = orderstatus.w_Id


</data>
</edge>delivery.c_id = orderstatus.c_id


</data>
</edge>
<node id="payment">
<data key="d0">"payment"</data>
</node>
<edge source="payment" target="neworder">
<data key="d1">
wr,CUSTOMER(['cId', 'dId', 'wId']).YTDPaymt


</data>
</edge>wr,CUSTOMER(['cId', 'dId', 'wId']).balance


</data>
</edge>wr,CUSTOMER(['cId', 'dId', 'wId']).paymtCnt


</data>
</edge>wr,DISTRICT(['dId', 'wId']).dYTD


</data>
</edge>payment.w_id = neworder.w_id


</data>
</edge>payment.d_id = neworder.d_id


</data>
</edge>payment.c_d_id = neworder.d_id


</data>
</edge>payment.c_id = neworder.c_Id


</data>
</edge>
<node id="delivery">
<data key="d0">"delivery"</data>
</node>
<edge source="delivery" target="neworder">
<data key="d1">
wr,CUSTOMER(['cId', 'dId', 'wId']).deliveryCnt


</data>
</edge>wr,CUSTOMER(['cId', 'dId', 'wId']).balance


</data>
</edge>delivery.d_id = neworder.d_id


</data>
</edge>delivery.w_id = neworder.w_id


</data>
</edge>delivery.c_id = neworder.c_Id


</data>
</edge>
<node id="neworder">
<data key="d0">"neworder"</data>
</node>
<edge source="neworder" target="stocklevel">
<data key="d1">
wr,STOCK(['iId', 'wId']).quantity


</data>
</edge>neworder.d_id = stocklevel.d_id


</data>
</edge>neworder.w_id = stocklevel.w_id


</data>
</edge>neworder.ol_supply_w_id = stocklevel.w_id


</data>
</edge>
<node id="delivery">
<data key="d0">"delivery"</data>
</node>
<edge source="delivery" target="stocklevel">
<data key="d1">
wr,ORDERLINE(['oId', 'dId', 'wId', 'number']).deliveryDate


</data>
</edge>delivery.d_id = stocklevel.d_id


</data>
</edge>delivery.w_id = stocklevel.w_id


</data>
</edge>
<node id="payment">
<data key="d0">"payment"</data>
</node>
<edge source="payment" target="payment">
<data key="d1">
wr,CUSTOMER(['cId', 'dId', 'wId']).YTDPaymt


</data>
</edge>ww,CUSTOMER(['cId', 'dId', 'wId']).YTDPaymt


</data>
</edge>ww,CUSTOMER(['cId', 'dId', 'wId']).paymtCnt


</data>
</edge>ww,CUSTOMER(['cId', 'dId', 'wId']).balance


</data>
</edge>ww,WAREHOUSE(['wId']).wYTD


</data>
</edge>ww,DISTRICT(['dId', 'wId']).dYTD


</data>
</edge>payment.w_id = payment.w_id


</data>
</edge>payment.d_id = payment.d_id


</data>
</edge>payment.c_id = payment.c_id


</data>
</edge>
<node id="delivery">
<data key="d0">"delivery"</data>
</node>
<edge source="delivery" target="payment">
<data key="d1">
wr,CUSTOMER(['cId', 'dId', 'wId']).balance


</data>
</edge>wr,CUSTOMER(['cId', 'dId', 'wId']).deliveryCnt


</data>
</edge>delivery.d_id = payment.c_d_id


</data>
</edge>delivery.w_id = payment.w_id


</data>
</edge>delivery.c_id = payment.c_id


</data>
</edge>
<node id="delivery">
<data key="d0">"delivery"</data>
</node>
<edge source="delivery" target="delivery">
<data key="d1">
wr,ORDERLINE(['oId', 'dId', 'wId', 'number']).deliveryDate


</data>
</edge>ww,ORDERS(['oId', 'dId', 'wId']).carrierId


</data>
</edge>ww,ORDERLINE(['oId', 'dId', 'wId', 'number']).deliveryDate


</data>
</edge>ww,CUSTOMER(['cId', 'dId', 'wId']).balance


</data>
</edge>ww,CUSTOMER(['cId', 'dId', 'wId']).deliveryCnt


</data>
</edge>delivery.w_id = delivery.w_id


</data>
</edge>delivery.d_id = delivery.d_id


</data>
</edge>
<node id="stocklevel">
<data key="d0">"stocklevel"</data>
</node>
<edge source="stocklevel" target="neworder">
<data key="d1">
rw,STOCK(['iId', 'wId']).quantity


</data>
</edge>stocklevel.w_id = neworder.w_id


</data>
</edge>stocklevel.w_id = neworder.ol_supply_w_id


</data>
</edge>stocklevel.d_id = neworder.d_id


</data>
</edge>
<node id="orderstatus">
<data key="d0">"orderstatus"</data>
</node>
<edge source="orderstatus" target="payment">
<data key="d1">
rw,CUSTOMER(['cId', 'dId', 'wId']).YTDPaymt


</data>
</edge>rw,CUSTOMER(['cId', 'dId', 'wId']).paymtCnt


</data>
</edge>rw,CUSTOMER(['cId', 'dId', 'wId']).balance


</data>
</edge>orderstatus.d_Id = payment.c_d_id


</data>
</edge>orderstatus.w_Id = payment.w_id


</data>
</edge>orderstatus.c_id = payment.c_id


</data>
</edge>
<node id="neworder">
<data key="d0">"neworder"</data>
</node>
<edge source="neworder" target="payment">
<data key="d1">
rw,DISTRICT(['dId', 'wId']).dYTD


</data>
</edge>rw,CUSTOMER(['cId', 'dId', 'wId']).YTDPaymt


</data>
</edge>rw,CUSTOMER(['cId', 'dId', 'wId']).paymtCnt


</data>
</edge>rw,CUSTOMER(['cId', 'dId', 'wId']).balance


</data>
</edge>neworder.w_id = payment.w_id


</data>
</edge>neworder.d_id = payment.d_id


</data>
</edge>neworder.d_id = payment.c_d_id


</data>
</edge>neworder.c_Id = payment.c_id


</data>
</edge>
<node id="orderstatus">
<data key="d0">"orderstatus"</data>
</node>
<edge source="orderstatus" target="delivery">
<data key="d1">
rw,ORDERLINE(['oId', 'dId', 'wId', 'number']).deliveryDate


</data>
</edge>rw,CUSTOMER(['cId', 'dId', 'wId']).balance


</data>
</edge>rw,CUSTOMER(['cId', 'dId', 'wId']).deliveryCnt


</data>
</edge>orderstatus.d_Id = delivery.d_id


</data>
</edge>orderstatus.w_Id = delivery.w_id


</data>
</edge>orderstatus.c_id = delivery.c_id


</data>
</edge>
<node id="neworder">
<data key="d0">"neworder"</data>
</node>
<edge source="neworder" target="delivery">
<data key="d1">
rw,CUSTOMER(['cId', 'dId', 'wId']).balance


</data>
</edge>rw,CUSTOMER(['cId', 'dId', 'wId']).deliveryCnt


</data>
</edge>neworder.w_id = delivery.w_id


</data>
</edge>neworder.d_id = delivery.d_id


</data>
</edge>neworder.c_Id = delivery.c_id


</data>
</edge>
<node id="stocklevel">
<data key="d0">"stocklevel"</data>
</node>
<edge source="stocklevel" target="delivery">
<data key="d1">
rw,ORDERLINE(['oId', 'dId', 'wId', 'number']).deliveryDate


</data>
</edge>stocklevel.w_id = delivery.w_id


</data>
</edge>stocklevel.d_id = delivery.d_id


</data>
</edge>
<node id="payment">
<data key="d0">"payment"</data>
</node>
<edge source="payment" target="delivery">
<data key="d1">
rw,CUSTOMER(['cId', 'dId', 'wId']).balance


</data>
</edge>rw,CUSTOMER(['cId', 'dId', 'wId']).deliveryCnt


</data>
</edge>payment.w_id = delivery.w_id


</data>
</edge>payment.c_id = delivery.c_id


</data>
</edge>payment.c_d_id = delivery.d_id


</data>
</edge></graph>
	</graphml>