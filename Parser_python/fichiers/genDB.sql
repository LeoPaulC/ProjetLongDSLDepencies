DROP TABLE IF EXISTS WAREHOUSE CASCADE;
DROP TABLE IF EXISTS DISTRICT CASCADE;
DROP TABLE IF EXISTS CUSTOMER CASCADE;
DROP TABLE IF EXISTS HISTORY CASCADE;
DROP TABLE IF EXISTS NEW_ORDER CASCADE;
DROP TABLE IF EXISTS ORDERS CASCADE;
DROP TABLE IF EXISTS ORDERLINE CASCADE;
DROP TABLE IF EXISTS ITEM CASCADE;
DROP TABLE IF EXISTS STOCK CASCADE;


CREATE TABLE WAREHOUSE(
  wId INTEGER PRIMARY KEY, 
  name VARCHAR(10), 
  str1 VARCHAR(20),
  str2 VARCHAR(20),
  city VARCHAR(20),
  state CHAR(2),
  zip CHAR(9),
  tax NUMERIC(4,4),
  wYTD NUMERIC(12,2)
);

CREATE TABLE DISTRICT(
  dId INTEGER UNIQUE, 
  wId INTEGER UNIQUE, 
  name VARCHAR(10),
  str1 VARCHAR(20),
  str2 VARCHAR(20),
  city VARCHAR(20), 
  state CHAR(2),
  zip CHAR(9),
  tax NUMERIC(4,4),
  dYTD NUMERIC(12,2),
  nextOrdId INTEGER UNIQUE,
  PRIMARY KEY(dId, wId),
  FOREIGN KEY(wId) REFERENCES WAREHOUSE(wId)
);

CREATE TABLE CUSTOMER(
  cId INTEGER UNIQUE,
  dId INTEGER UNIQUE, 
  wId INTEGER UNIQUE, 
  first VARCHAR(16),
  middle CHAR(2),
  lasT VARCHAR(16),
  str1 VARCHAR(20),
  str2 VARCHAR(20),
  city VARCHAR(20), 
  state CHAR(2),
  zip CHAR(9),
  phone CHAR(16),
  since DATE,
  credit CHAR(2),
  creditLim NUMERIC(12,2),
  discount NUMERIC(4,4),
  balance NUMERIC(12,2),
  YTDPaymt NUMERIC(12,2),
  paymtCnt NUMERIC(4),
  deliveryCnt NUMERIC(4),
  data VARCHAR(50),
  PRIMARY KEY(cId,dId, wId)
);

CREATE TABLE HISTORY(
  cId INTEGER UNIQUE,
  cDId INTEGER UNIQUE, 
  cWId INTEGER UNIQUE, 
  dId INTEGER UNIQUE, 
  wId INTEGER UNIQUE, 
  date date,
  amount NUMERIC(6,2),
  data VARCHAR(24),
  FOREIGN KEY (cWId, cDId, cId) REFERENCES CUSTOMER(wId, dId, cId),
  FOREIGN KEY (wId,dId) REFERENCES DISTRICT(wId,dId)
);

CREATE TABLE ORDERS(
  oId INTEGER UNIQUE,
  dId INTEGER UNIQUE,
  wId INTEGER UNIQUE,
  cId INTEGER UNIQUE,
  entryDate DATE,
  carrierId INTEGER,
  oLCnt NUMERIC(2),
  allLocal NUMERIC(1),
  PRIMARY KEY (oId,dId,wId),
  FOREIGN KEY (wId, dId, cId) REFERENCES CUSTOMER(wId, dId, cId)
);

CREATE TABLE NEW_ORDER(
  oId INTEGER PRIMARY KEY,
  dId INTEGER UNIQUE,
  wId INTEGER UNIQUE,
  FOREIGN KEY (wId,dId,oId) REFERENCES ORDERS(wId,dId,oId)
);


CREATE TABLE ITEM(
  iId INTEGER PRIMARY KEY,
  iMId INTEGER UNIQUE,
  name VARCHAR(24),
  price NUMERIC(5,2),
  data VARCHAR(50)
);

CREATE TABLE STOCK(
  iId INTEGER UNIQUE,
  wId INTEGER UNIQUE,
  quantity NUMERIC(4),
  dist01 CHAR(24),
  dist02 CHAR(24),
  dist03 CHAR(24),
  dist04 CHAR(24),
  dist05 CHAR(24),
  dist06 CHAR(24),
  dist07 CHAR(24),
  dist08 CHAR(24),
  dist09 CHAR(24),
  dist10 CHAR(24),
  YTD NUMERIC(8),
  orderCnt NUMERIC(4),
  remoteCnt NUMERIC(4),
  data VARCHAR(50),
  PRIMARY KEY (iId,wId),
  FOREIGN KEY (wId) REFERENCES WAREHOUSE(wId),
  FOREIGN KEY (iId) references ITEM(iId)
);

CREATE TABLE ORDERLINE(
  oId INTEGER UNIQUE,
  dId INTEGER UNIQUE,
  wId INTEGER UNIQUE,
  number INTEGER UNIQUE,
  iId INTEGER UNIQUE,
  supplyWId INTEGER UNIQUE,
  deliveryDate DATE,
  quantity NUMERIC(2),
  amount NUMERIC(6,2),
  distInfo CHAR(24),
  PRIMARY KEY (oId, dId, wId, number),
  FOREIGN KEY (wId, dId, oId) REFERENCES ORDERS(wId, dId, oId),
  FOREIGN KEY (supplyWId, iId) REFERENCES STOCK(wId, iId)
);