## Fichier généré dans le cadre de Plong2019/2020 pour etudier les raisons de dépendances entre 2 transactions , ID = "nom_de_la_relation" SRC = "fichier_source" DST = "fichier_destination"
## ( SRC et DST sont en rapport avec les fleches du graphes).


<Relation ID="ww,STOCK(['iId', 'wId']).quantity" SRC="neworder" DST="neworder" CONDITION=False >
<SRC>
	 l: 84	UPDATE STOCK SET quantity = s_quantity WHERE STOCK.iId = ol_i_id AND STOCK.wId = ol_supply_w_id;
</SRC>
<DST>
	 l: 84	UPDATE STOCK SET quantity = s_quantity WHERE STOCK.iId = ol_i_id AND STOCK.wId = ol_supply_w_id;
</DST>
</Relation>


<Relation ID="ww,ORDERLINE(*).*" SRC="neworder" DST="neworder" CONDITION=False >
<SRC>
	 l: 93	INSERT INTO ORDERLINE(oId, dId, wId, number, iId, supplyWId, quantity, amount, distInfo) VALUES (o_id, d_id, w_id, ol_number, ol_i_id, ol_supply_w_id, ol_quantity, ol_amount, ol_dist_info);
	 l: 0	UPDATE ORDERLINE SET deliveryDate = date_time WHERE ORDERLINE.oId = no_o_id AND ORDERLINE.dId = d_id AND ORDERLINE.wId = w_id;
</SRC>
<DST>
	 l: 0	DECLARE c_line CURSOR FOR SELECT iId, supplyWId, quantity, amount, deliveryDate FROM ORDERLINE OL WHERE OL.oId = o_id AND OL.dId = d_id AND OL.wId = w_id
	 l: 0	SELECT COUNT(DISTINCT(S.iId)) INTO stock_count FROM ORDERLINE OL, STOCK S WHERE OL.wId = w_id AND OL.dId = d_id AND OL.oId < o_id AND OL.oId >= o_id - 20 AND S.wId = w_id AND S.iId = OL.iId AND S.quantity < threshold
	 l: 93	INSERT INTO ORDERLINE(oId, dId, wId, number, iId, supplyWId, quantity, amount, distInfo) VALUES (o_id, d_id, w_id, ol_number, ol_i_id, ol_supply_w_id, ol_quantity, ol_amount, ol_dist_info);
	 l: 0	UPDATE ORDERLINE SET deliveryDate = date_time WHERE ORDERLINE.oId = no_o_id AND ORDERLINE.dId = d_id AND ORDERLINE.wId = w_id;
</DST>
</Relation>


<Relation ID="ww,ORDERS(*).*" SRC="neworder" DST="neworder" CONDITION=False >
<SRC>
	 l: 37	INSERT INTO ORDERS(oId, dId, wId, cId, entryDate, oLCnt, allLocal) VALUES (o_id, d_Id, w_Id, c_Id, date_time, o_ol_cnt, o_all_local);
	 l: 0	UPDATE ORDERS SET carrierId = o_carrier_id WHERE ORDERS.oId = no_o_id AND ORDERS.dId = d_id AND ORDERS.wId = w_id;
</SRC>
<DST>
	 l: 0	SELECT oId, carrierId, entryDate INTO o_id, o_carrier_id, ent_date FROM ORDERS O ORDER BY O.oId DESC
	 l: 0	SELECT cId INTO c_id FROM ORDERS O WHERE O.oId = no_o_id AND O.dId = d_id AND O.wId = w_id
	 l: 37	INSERT INTO ORDERS(oId, dId, wId, cId, entryDate, oLCnt, allLocal) VALUES (o_id, d_Id, w_Id, c_Id, date_time, o_ol_cnt, o_all_local);
	 l: 0	UPDATE ORDERS SET carrierId = o_carrier_id WHERE ORDERS.oId = no_o_id AND ORDERS.dId = d_id AND ORDERS.wId = w_id;
</DST>
</Relation>


<Relation ID="ww,NEW_ORDER(*).*" SRC="neworder" DST="neworder" CONDITION=False >
<SRC>
	 l: 40	INSERT INTO NEW_ORDER(oId, dId, wId) VALUES (o_id, d_Id, w_Id);
</SRC>
<DST>
	 l: 0	SELECT oId FROM NEW_ORDER NO WHERE NO.dId = d_id AND NO.wId = w_id ORDER BY NO.oId ASC
	 l: 40	INSERT INTO NEW_ORDER(oId, dId, wId) VALUES (o_id, d_Id, w_Id);
</DST>
</Relation>


<Relation ID="ww,DISTRICT(['dId', 'wId']).nextOrdId" SRC="neworder" DST="neworder" CONDITION=False >
<SRC>
	 l: 32	UPDATE DISTRICT SET nextOrdId = d_next_o_id + 1 WHERE DISTRICT.dId = d_id AND DISTRICT.wId = w_id;
</SRC>
<DST>
	 l: 32	UPDATE DISTRICT SET nextOrdId = d_next_o_id + 1 WHERE DISTRICT.dId = d_id AND DISTRICT.wId = w_id;
</DST>
</Relation>


<Relation ID="ww,CUSTOMER(['cId', 'dId', 'wId']).balance" SRC="payment" DST="payment" CONDITION=True >
<SRC>
	 l: 108	UPDATE CUSTOMER SET balance = c_balance, data = c_new_data WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
	 l: 112	UPDATE CUSTOMER SET balance = c_balance WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
</SRC>
<DST>
	 l: 108	UPDATE CUSTOMER SET balance = c_balance, data = c_new_data WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
	 l: 112	UPDATE CUSTOMER SET balance = c_balance WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
</DST>
</Relation>


<Relation ID="wr,CUSTOMER(['cId', 'dId', 'wId']).balance" SRC="payment" DST="payment" CONDITION=True >
<SRC>
	 l: 108	UPDATE CUSTOMER SET balance = c_balance, data = c_new_data WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
	 l: 112	UPDATE CUSTOMER SET balance = c_balance WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
</SRC>
<DST>
	 l: 62	DECLARE c_byname CURSOR FOR SELECT first, middle, cId, str1, str2, city, state, zip, phone, credit, creditLim, discount,balance, since FROM CUSTOMER C WHERE C.wId = w_id AND C.dId = c_d_id AND C.last = c_last ORDER BY C.first
	 l: 82	SELECT first, middle, last, str1, str2, city, state, zip, phone, credit, creditLim, discount,balance, since INTO c_first,c_middle,c_last, c_str1, c_str2, c_city, c_state, c_zip, c_phone, c_credit, c_creditLim, c_discount,c_balance,c_since FROM CUSTOMER C WHERE C.wId = w_id AND C.dId = c_d_id AND C.cId = c_id
</DST>
</Relation>


<Relation ID="ww,WAREHOUSE(['wId']).wYTD" SRC="payment" DST="payment" CONDITION=False >
<SRC>
	 l: 36	UPDATE WAREHOUSE SET wYTD = wYTD + h_amount WHERE WAREHOUSE.wId = w_id;
</SRC>
<DST>
	 l: 36	UPDATE WAREHOUSE SET wYTD = wYTD + h_amount WHERE WAREHOUSE.wId = w_id;
</DST>
</Relation>


<Relation ID="ww,CUSTOMER(['cId', 'dId', 'wId']).YTDPaymt" SRC="payment" DST="payment" CONDITION=False >
<SRC>
	 l: 93	UPDATE CUSTOMER SET YTDPaymt = YTDPaymt + h_amount WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
</SRC>
<DST>
	 l: 93	UPDATE CUSTOMER SET YTDPaymt = YTDPaymt + h_amount WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
</DST>
</Relation>


<Relation ID="ww,HISTORY(*).*" SRC="payment" DST="payment" CONDITION=False >
<SRC>
	 l: 126	INSERT INTO HISTORY(cDId, cWId, cId, dId, wId, date, amount, data) VALUES (c_d_id, w_id, c_id, c_d_id, w_id, datetime, c_amount, c_data);
</SRC>
<DST>
	 l: 126	INSERT INTO HISTORY(cDId, cWId, cId, dId, wId, date, amount, data) VALUES (c_d_id, w_id, c_id, c_d_id, w_id, datetime, c_amount, c_data);
</DST>
</Relation>


<Relation ID="ww,CUSTOMER(['cId', 'dId', 'wId']).paymtCnt" SRC="payment" DST="payment" CONDITION=False >
<SRC>
	 l: 96	UPDATE CUSTOMER SET paymtCnt = paymtCnt + 1 WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
</SRC>
<DST>
	 l: 96	UPDATE CUSTOMER SET paymtCnt = paymtCnt + 1 WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
</DST>
</Relation>


<Relation ID="ww,DISTRICT(['dId', 'wId']).dYTD" SRC="payment" DST="payment" CONDITION=False >
<SRC>
	 l: 44	UPDATE DISTRICT SET dYTD = dYTD + h_amount WHERE DISTRICT.wId = w_id AND DISTRICT.dId = d_id;
</SRC>
<DST>
	 l: 44	UPDATE DISTRICT SET dYTD = dYTD + h_amount WHERE DISTRICT.wId = w_id AND DISTRICT.dId = d_id;
</DST>
</Relation>


<Relation ID="wr,CUSTOMER(['cId', 'dId', 'wId']).balance" SRC="payment" DST="orderstatus" CONDITION=True >
<SRC>
	 l: 108	UPDATE CUSTOMER SET balance = c_balance, data = c_new_data WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
	 l: 112	UPDATE CUSTOMER SET balance = c_balance WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
</SRC>
<DST>
	 l: 0	DECLARE c_name CURSOR FOR SELECT balance, first, middle, cId FROM CUSTOMER C WHERE C.last = c_last AND C.dId = d_id AND C.wId = w_id ORDER BY C.first
	 l: 0	SELECT balance, first, middle, last INTO c_balance, c_first, c_middle, c_last FROM CUSTOMER C WHERE C.cId = c_id AND C.dId = d_id AND C.wId = w_Id
</DST>
</Relation>


<Relation ID="wr,CUSTOMER(['cId', 'dId', 'wId']).balance" SRC="delivery" DST="orderstatus" CONDITION=False >
<SRC>
	 l: 41	UPDATE CUSTOMER SET balance = balance + ol_total WHERE CUSTOMER.cId = c_id AND CUSTOMER.dId = d_id AND CUSTOMER.wId = w_Id;
</SRC>
<DST>
	 l: 0	DECLARE c_name CURSOR FOR SELECT balance, first, middle, cId FROM CUSTOMER C WHERE C.last = c_last AND C.dId = d_id AND C.wId = w_id ORDER BY C.first
	 l: 0	SELECT balance, first, middle, last INTO c_balance, c_first, c_middle, c_last FROM CUSTOMER C WHERE C.cId = c_id AND C.dId = d_id AND C.wId = w_Id
</DST>
</Relation>


<Relation ID="wr,ORDERLINE(['oId', 'dId', 'wId', 'number']).deliveryDate" SRC="delivery" DST="orderstatus" CONDITION=False >
<SRC>
	 l: 34	UPDATE ORDERLINE SET deliveryDate = date_time WHERE ORDERLINE.oId = no_o_id AND ORDERLINE.dId = d_id AND ORDERLINE.wId = w_id;
</SRC>
<DST>
	 l: 0	DECLARE c_line CURSOR FOR SELECT iId, supplyWId, quantity, amount, deliveryDate FROM ORDERLINE OL WHERE OL.oId = o_id AND OL.dId = d_id AND OL.wId = w_id
</DST>
</Relation>


<Relation ID="wr,CUSTOMER(['cId', 'dId', 'wId']).balance" SRC="delivery" DST="payment" CONDITION=False >
<SRC>
	 l: 41	UPDATE CUSTOMER SET balance = balance + ol_total WHERE CUSTOMER.cId = c_id AND CUSTOMER.dId = d_id AND CUSTOMER.wId = w_Id;
</SRC>
<DST>
	 l: 0	DECLARE c_byname CURSOR FOR SELECT first, middle, cId, str1, str2, city, state, zip, phone, credit, creditLim, discount,balance, since FROM CUSTOMER C WHERE C.wId = w_id AND C.dId = c_d_id AND C.last = c_last ORDER BY C.first
	 l: 0	SELECT first, middle, last, str1, str2, city, state, zip, phone, credit, creditLim, discount,balance, since INTO c_first,c_middle,c_last, c_str1, c_str2, c_city, c_state, c_zip, c_phone, c_credit, c_creditLim, c_discount,c_balance,c_since FROM CUSTOMER C WHERE C.wId = w_id AND C.dId = c_d_id AND C.cId = c_id
</DST>
</Relation>


<Relation ID="ww,CUSTOMER(['cId', 'dId', 'wId']).balance" SRC="delivery" DST="delivery" CONDITION=False >
<SRC>
	 l: 41	UPDATE CUSTOMER SET balance = balance + ol_total WHERE CUSTOMER.cId = c_id AND CUSTOMER.dId = d_id AND CUSTOMER.wId = w_Id;
</SRC>
<DST>
	 l: 41	UPDATE CUSTOMER SET balance = balance + ol_total WHERE CUSTOMER.cId = c_id AND CUSTOMER.dId = d_id AND CUSTOMER.wId = w_Id;
</DST>
</Relation>


<Relation ID="ww,ORDERLINE(['oId', 'dId', 'wId', 'number']).deliveryDate" SRC="delivery" DST="delivery" CONDITION=False >
<SRC>
	 l: 34	UPDATE ORDERLINE SET deliveryDate = date_time WHERE ORDERLINE.oId = no_o_id AND ORDERLINE.dId = d_id AND ORDERLINE.wId = w_id;
</SRC>
<DST>
	 l: 34	UPDATE ORDERLINE SET deliveryDate = date_time WHERE ORDERLINE.oId = no_o_id AND ORDERLINE.dId = d_id AND ORDERLINE.wId = w_id;
</DST>
</Relation>


<Relation ID="ww,ORDERS(['oId', 'dId', 'wId']).carrierId" SRC="delivery" DST="delivery" CONDITION=False >
<SRC>
	 l: 31	UPDATE ORDERS SET carrierId = o_carrier_id WHERE ORDERS.oId = no_o_id AND ORDERS.dId = d_id AND ORDERS.wId = w_id;
</SRC>
<DST>
	 l: 31	UPDATE ORDERS SET carrierId = o_carrier_id WHERE ORDERS.oId = no_o_id AND ORDERS.dId = d_id AND ORDERS.wId = w_id;
</DST>
</Relation>


<Relation ID="ww,CUSTOMER(['cId', 'dId', 'wId']).deliveryCnt" SRC="delivery" DST="delivery" CONDITION=False >
<SRC>
	 l: 45	UPDATE CUSTOMER SET deliveryCnt = deliveryCnt + 1 WHERE CUSTOMER.cId = c_id AND CUSTOMER.dId = d_id AND CUSTOMER.wId = w_Id;
</SRC>
<DST>
	 l: 45	UPDATE CUSTOMER SET deliveryCnt = deliveryCnt + 1 WHERE CUSTOMER.cId = c_id AND CUSTOMER.dId = d_id AND CUSTOMER.wId = w_Id;
</DST>
</Relation>


<Relation ID="rw,CUSTOMER(['cId', 'dId', 'wId']).balance" SRC="orderstatus" DST="payment" CONDITION=True >
<SRC>
	 l: 0	DECLARE c_name CURSOR FOR SELECT balance, first, middle, cId FROM CUSTOMER C WHERE C.last = c_last AND C.dId = d_id AND C.wId = w_id ORDER BY C.first
	 l: 43	SELECT balance, first, middle, last INTO c_balance, c_first, c_middle, c_last FROM CUSTOMER C WHERE C.cId = c_id AND C.dId = d_id AND C.wId = w_Id
</SRC>
<DST>
	 l: 0	UPDATE CUSTOMER SET balance = c_balance, data = c_new_data WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
	 l: 0	UPDATE CUSTOMER SET balance = c_balance WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
</DST>
</Relation>


<Relation ID="rw,CUSTOMER(['cId', 'dId', 'wId']).balance" SRC="orderstatus" DST="delivery" CONDITION=True >
<SRC>
	 l: 0	DECLARE c_name CURSOR FOR SELECT balance, first, middle, cId FROM CUSTOMER C WHERE C.last = c_last AND C.dId = d_id AND C.wId = w_id ORDER BY C.first
	 l: 43	SELECT balance, first, middle, last INTO c_balance, c_first, c_middle, c_last FROM CUSTOMER C WHERE C.cId = c_id AND C.dId = d_id AND C.wId = w_Id
</SRC>
<DST>
	 l: 0	UPDATE CUSTOMER SET balance = balance + ol_total WHERE CUSTOMER.cId = c_id AND CUSTOMER.dId = d_id AND CUSTOMER.wId = w_Id;
</DST>
</Relation>


<Relation ID="rw,ORDERLINE(['oId', 'dId', 'wId', 'number']).deliveryDate" SRC="orderstatus" DST="delivery" CONDITION=False >
<SRC>
	 l: 0	DECLARE c_line CURSOR FOR SELECT iId, supplyWId, quantity, amount, deliveryDate FROM ORDERLINE OL WHERE OL.oId = o_id AND OL.dId = d_id AND OL.wId = w_id
</SRC>
<DST>
	 l: 0	UPDATE ORDERLINE SET deliveryDate = date_time WHERE ORDERLINE.oId = no_o_id AND ORDERLINE.dId = d_id AND ORDERLINE.wId = w_id;
</DST>
</Relation>


<Relation ID="rw,CUSTOMER(['cId', 'dId', 'wId']).balance" SRC="payment" DST="delivery" CONDITION=True >
<SRC>
	 l: 62	DECLARE c_byname CURSOR FOR SELECT first, middle, cId, str1, str2, city, state, zip, phone, credit, creditLim, discount,balance, since FROM CUSTOMER C WHERE C.wId = w_id AND C.dId = c_d_id AND C.last = c_last ORDER BY C.first
	 l: 82	SELECT first, middle, last, str1, str2, city, state, zip, phone, credit, creditLim, discount,balance, since INTO c_first,c_middle,c_last, c_str1, c_str2, c_city, c_state, c_zip, c_phone, c_credit, c_creditLim, c_discount,c_balance,c_since FROM CUSTOMER C WHERE C.wId = w_id AND C.dId = c_d_id AND C.cId = c_id
</SRC>
<DST>
	 l: 0	UPDATE CUSTOMER SET balance = balance + ol_total WHERE CUSTOMER.cId = c_id AND CUSTOMER.dId = d_id AND CUSTOMER.wId = w_Id;
</DST>
</Relation>

