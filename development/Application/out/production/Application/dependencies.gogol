#-- Created by TRAORE Paul & CADIOU LÃ©o-Paul --#


<<<<<<< HEAD
<Relation ID="ww,ITEMS(['iId']).nbids" SRC="StoreBId.sql" DST="StoreBId.sql" CONDITION=False >
=======
<Relation ID="rw,DISTRICT(['dId','wId']).nextOrdId" SRC="stocklevel.sql" DST="neworder.sql" CONDITION=False >
>>>>>>> a4916ccc705062e669db74a62a6920a717294182
<SRC>
	l: 8	SELECT DISTRICT.nextOrdId INTO o_id FROM DISTRICT D WHERE DISTRICT.wId = w_id AND DISTRICT.dId = d_id;
</SRC>
<DST>
<<<<<<< HEAD
	l: 14	UPDATE ITEMS SET nbids = n + 1 WHERE ITEMS.iId = i_id;
=======
	l: 31	UPDATE DISTRICT SET nextOrdId = d_next_o_id + 1 WHERE DISTRICT.dId = d_id AND DISTRICT.wId = w_id;
</DST>
</Relation>

<Relation ID="wr,DISTRICT(['dId','wId']).nextOrdId" SRC="neworder.sql" DST="stocklevel.sql" CONDITION=False >
<SRC>
	l: 31	UPDATE DISTRICT SET nextOrdId = d_next_o_id + 1 WHERE DISTRICT.dId = d_id AND DISTRICT.wId = w_id;
</SRC>
<DST>
	l: 8	SELECT DISTRICT.nextOrdId INTO o_id FROM DISTRICT D WHERE DISTRICT.wId = w_id AND DISTRICT.dId = d_id;
>>>>>>> a4916ccc705062e669db74a62a6920a717294182
</DST>
</Relation>

<Relation ID="rw,ORDERS(*).*" SRC="orderstatus.sql" DST="neworder.sql" CONDITION=False >
<SRC>
	l: 49	SELECT ORDERS.oId, ORDERS.carrierId, ORDERS.entryDate INTO o_id, o_carrier_id, ent_date FROM ORDERS O ORDER BY ORDERS.oId DESC;
</SRC>
<DST>
	l: 37	INSERT INTO ORDERS(oId, dId, wId, cId, entryDate, oLCnt, allLocal) VALUES (o_id, d_Id, w_Id, c_Id, date_time, o_ol_cnt, o_all_local);
</DST>
</Relation>

<<<<<<< HEAD
<Relation ID="rw,ITEMS(['iId']).nbids" SRC="StoreBId.sql" DST="StoreBId.sql" CONDITION=False >
<SRC>
	l: 10	SELECT ITEMS.nbids FROM ITEMS I WHERE ITEMS.iId = i_id;
=======
<Relation ID="rw,ORDERLINE(*).*" SRC="orderstatus.sql" DST="neworder.sql" CONDITION=False >
<SRC>
	l: 18	DECLARE c_line CURSOR FOR SELECT ORDERLINE.iId, ORDERLINE.supplyWId, ORDERLINE.quantity, ORDERLINE.amount, ORDERLINE.deliveryDate FROM ORDERLINE OL WHERE ORDERLINE.oId = o_id AND ORDERLINE.dId = d_id AND ORDERLINE.wId = w_id;
>>>>>>> a4916ccc705062e669db74a62a6920a717294182
</SRC>
<DST>
	l: 93	INSERT INTO ORDERLINE(oId, dId, wId, number, iId, supplyWId, quantity, amount, distInfo) VALUES (o_id, d_id, w_id, ol_number, ol_i_id, ol_supply_w_id, ol_quantity, ol_amount, ol_dist_info);
</DST>
</Relation>

<<<<<<< HEAD
<Relation ID="wr,ITEMS(['iId']).nbids" SRC="StoreBId.sql" DST="StoreBId.sql" CONDITION=False >
<SRC>
	l: 14	UPDATE ITEMS SET nbids = n + 1 WHERE ITEMS.iId = i_id;
</SRC>
<DST>
	l: 10	SELECT ITEMS.nbids FROM ITEMS I WHERE ITEMS.iId = i_id;
=======
<Relation ID="wr,ORDERS(*).*" SRC="neworder.sql" DST="orderstatus.sql" CONDITION=False >
<SRC>
	l: 37	INSERT INTO ORDERS(oId, dId, wId, cId, entryDate, oLCnt, allLocal) VALUES (o_id, d_Id, w_Id, c_Id, date_time, o_ol_cnt, o_all_local);
</SRC>
<DST>
	l: 49	SELECT ORDERS.oId, ORDERS.carrierId, ORDERS.entryDate INTO o_id, o_carrier_id, ent_date FROM ORDERS O ORDER BY ORDERS.oId DESC;
>>>>>>> a4916ccc705062e669db74a62a6920a717294182
</DST>
</Relation>

<Relation ID="wr,ORDERLINE(*).*" SRC="neworder.sql" DST="orderstatus.sql" CONDITION=False >
<SRC>
	l: 93	INSERT INTO ORDERLINE(oId, dId, wId, number, iId, supplyWId, quantity, amount, distInfo) VALUES (o_id, d_id, w_id, ol_number, ol_i_id, ol_supply_w_id, ol_quantity, ol_amount, ol_dist_info);
</SRC>
<DST>
	l: 18	DECLARE c_line CURSOR FOR SELECT ORDERLINE.iId, ORDERLINE.supplyWId, ORDERLINE.quantity, ORDERLINE.amount, ORDERLINE.deliveryDate FROM ORDERLINE OL WHERE ORDERLINE.oId = o_id AND ORDERLINE.dId = d_id AND ORDERLINE.wId = w_id;
</DST>
</Relation>

<<<<<<< HEAD
<Relation ID="rw,ITEMS(['iId']).nbids" SRC="ViewItem.sql" DST="StoreBId.sql" CONDITION=False >
<SRC>
	l: 12	SELECT ITEMS.nbids FROM ITEMS I WHERE ITEMS.iId = i_id;
</SRC>
<DST>
	l: 14	UPDATE ITEMS SET nbids = n + 1 WHERE ITEMS.iId = i_id;
=======
<Relation ID="rw,ORDERLINE(['oId','dId','wId','number']).deliveryDate" SRC="orderstatus.sql" DST="delivery.sql" CONDITION=False >
<SRC>
	l: 18	DECLARE c_line CURSOR FOR SELECT ORDERLINE.iId, ORDERLINE.supplyWId, ORDERLINE.quantity, ORDERLINE.amount, ORDERLINE.deliveryDate FROM ORDERLINE OL WHERE ORDERLINE.oId = o_id AND ORDERLINE.dId = d_id AND ORDERLINE.wId = w_id;
</SRC>
<DST>
	l: 33	UPDATE ORDERLINE SET deliveryDate = date_time WHERE ORDERLINE.oId = no_o_id AND ORDERLINE.dId = d_id AND ORDERLINE.wId = w_id;
>>>>>>> a4916ccc705062e669db74a62a6920a717294182
</DST>
</Relation>

<Relation ID="rw,ORDERS(['oId','dId','wId']).carrierId" SRC="orderstatus.sql" DST="delivery.sql" CONDITION=False >
<SRC>
	l: 49	SELECT ORDERS.oId, ORDERS.carrierId, ORDERS.entryDate INTO o_id, o_carrier_id, ent_date FROM ORDERS O ORDER BY ORDERS.oId DESC;
</SRC>
<DST>
	l: 30	UPDATE ORDERS SET carrierId = o_carrier_id WHERE ORDERS.oId = no_o_id AND ORDERS.dId = d_id AND ORDERS.wId = w_id;
</DST>
</Relation>

<Relation ID="wr,ORDERLINE(['oId','dId','wId','number']).deliveryDate" SRC="delivery.sql" DST="orderstatus.sql" CONDITION=False >
<SRC>
	l: 33	UPDATE ORDERLINE SET deliveryDate = date_time WHERE ORDERLINE.oId = no_o_id AND ORDERLINE.dId = d_id AND ORDERLINE.wId = w_id;
</SRC>
<DST>
	l: 18	DECLARE c_line CURSOR FOR SELECT ORDERLINE.iId, ORDERLINE.supplyWId, ORDERLINE.quantity, ORDERLINE.amount, ORDERLINE.deliveryDate FROM ORDERLINE OL WHERE ORDERLINE.oId = o_id AND ORDERLINE.dId = d_id AND ORDERLINE.wId = w_id;
</DST>
</Relation>

<Relation ID="wr,ORDERS(['oId','dId','wId']).carrierId" SRC="delivery.sql" DST="orderstatus.sql" CONDITION=False >
<SRC>
	l: 30	UPDATE ORDERS SET carrierId = o_carrier_id WHERE ORDERS.oId = no_o_id AND ORDERS.dId = d_id AND ORDERS.wId = w_id;
</SRC>
<DST>
	l: 49	SELECT ORDERS.oId, ORDERS.carrierId, ORDERS.entryDate INTO o_id, o_carrier_id, ent_date FROM ORDERS O ORDER BY ORDERS.oId DESC;
</DST>
</Relation>

<Relation ID="wr,CUSTOMER(['cId','dId','wId']).balance" SRC="payment.sql" DST="orderstatus.sql" CONDITION=False >
<SRC>
	l: 107	UPDATE CUSTOMER SET balance = c_balance, data = c_new_data WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
	l: 111	ELSE UPDATE CUSTOMER SET balance = c_balance WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
</SRC>
<DST>
	l: 18	DECLARE c_name CURSOR FOR SELECT CUSTOMER.balance, CUSTOMER.first, CUSTOMER.middle, CUSTOMER.cId FROM CUSTOMER C WHERE CUSTOMER.last = c_last AND CUSTOMER.dId = d_id AND CUSTOMER.wId = w_id ORDER BY CUSTOMER.first;
	l: 18	ELSE SELECT CUSTOMER.balance, CUSTOMER.first, CUSTOMER.middle, CUSTOMER.last INTO c_balance, c_first, c_middle, c_last FROM CUSTOMER C WHERE CUSTOMER.cId = c_id AND CUSTOMER.dId = d_id AND CUSTOMER.wId = w_Id;
</DST>
</Relation>

<Relation ID="ww,STOCK(['iId', 'wId']).quantity" SRC="neworder.sql" DST="neworder.sql" CONDITION=False >
<SRC>
	l: 83	UPDATE STOCK SET quantity = s_quantity WHERE STOCK.iId = ol_i_id AND STOCK.wId = ol_supply_w_id;
</SRC>
<DST>
	l: 83	UPDATE STOCK SET quantity = s_quantity WHERE STOCK.iId = ol_i_id AND STOCK.wId = ol_supply_w_id;
</DST>
</Relation>

<Relation ID="ww,ORDERS(*).*" SRC="neworder.sql" DST="neworder.sql" CONDITION=False >
<SRC>
	l: 37	INSERT INTO ORDERS(oId, dId, wId, cId, entryDate, oLCnt, allLocal) VALUES (o_id, d_Id, w_Id, c_Id, date_time, o_ol_cnt, o_all_local);
</SRC>
<DST>
	l: 37	INSERT INTO ORDERS(oId, dId, wId, cId, entryDate, oLCnt, allLocal) VALUES (o_id, d_Id, w_Id, c_Id, date_time, o_ol_cnt, o_all_local);
</DST>
</Relation>

<Relation ID="wr,STOCK(['iId','wId']).quantity" SRC="neworder.sql" DST="neworder.sql" CONDITION=False >
<SRC>
	l: 83	UPDATE STOCK SET quantity = s_quantity WHERE STOCK.iId = ol_i_id AND STOCK.wId = ol_supply_w_id;
</SRC>
<DST>
	l: 61	SELECT STOCK.quantity, STOCK.data, STOCK.dist01, STOCK.dist02, STOCK.dist03, STOCK.dist04, STOCK.dist05, STOCK.dist06, STOCK.dist07, STOCK.dist08, STOCK.dist09, STOCK.dist10 INTO s_quantity, s_data, s_dist01, s_dist02, s_dist03, s_dist04, s_dist05, s_dist06, s_dist07, s_dist08, s_dist09, s_dist10 FROM STOCK WHERE STOCK.iId = ol_i_id AND STOCK.wId = ol_supply_w_id;
</DST>
</Relation>

<Relation ID="rw,STOCK(['iId','wId']).quantity" SRC="neworder.sql" DST="neworder.sql" CONDITION=False >
<SRC>
	l: 61	SELECT STOCK.quantity, STOCK.data, STOCK.dist01, STOCK.dist02, STOCK.dist03, STOCK.dist04, STOCK.dist05, STOCK.dist06, STOCK.dist07, STOCK.dist08, STOCK.dist09, STOCK.dist10 INTO s_quantity, s_data, s_dist01, s_dist02, s_dist03, s_dist04, s_dist05, s_dist06, s_dist07, s_dist08, s_dist09, s_dist10 FROM STOCK WHERE STOCK.iId = ol_i_id AND STOCK.wId = ol_supply_w_id;
</SRC>
<DST>
	l: 83	UPDATE STOCK SET quantity = s_quantity WHERE STOCK.iId = ol_i_id AND STOCK.wId = ol_supply_w_id;
</DST>
</Relation>

<Relation ID="ww,ORDERLINE(*).*" SRC="neworder.sql" DST="neworder.sql" CONDITION=False >
<SRC>
	l: 93	INSERT INTO ORDERLINE(oId, dId, wId, number, iId, supplyWId, quantity, amount, distInfo) VALUES (o_id, d_id, w_id, ol_number, ol_i_id, ol_supply_w_id, ol_quantity, ol_amount, ol_dist_info);
</SRC>
<DST>
	l: 93	INSERT INTO ORDERLINE(oId, dId, wId, number, iId, supplyWId, quantity, amount, distInfo) VALUES (o_id, d_id, w_id, ol_number, ol_i_id, ol_supply_w_id, ol_quantity, ol_amount, ol_dist_info);
</DST>
</Relation>

<Relation ID="wr,DISTRICT(['dId','wId']).nextOrdId" SRC="neworder.sql" DST="neworder.sql" CONDITION=False >
<SRC>
	l: 31	UPDATE DISTRICT SET nextOrdId = d_next_o_id + 1 WHERE DISTRICT.dId = d_id AND DISTRICT.wId = w_id;
</SRC>
<DST>
	l: 27	SELECT DISTRICT.nextOrdId, DISTRICT.tax INTO d_next_o_id, d_tax FROM DISTRICT D WHERE DISTRICT.dId = d_id AND DISTRICT.wId = w_id;
</DST>
</Relation>

<Relation ID="ww,NEW_ORDER(*).*" SRC="neworder.sql" DST="neworder.sql" CONDITION=False >
<SRC>
	l: 37	INSERT INTO ORDERS(oId, dId, wId, cId, entryDate, oLCnt, allLocal) VALUES (o_id, d_Id, w_Id, c_Id, date_time, o_ol_cnt, o_all_local);
	l: 40	INSERT INTO NEW_ORDER(oId, dId, wId) VALUES (o_id, d_Id, w_Id);
	l: 93	INSERT INTO ORDERLINE(oId, dId, wId, number, iId, supplyWId, quantity, amount, distInfo) VALUES (o_id, d_id, w_id, ol_number, ol_i_id, ol_supply_w_id, ol_quantity, ol_amount, ol_dist_info);
</SRC>
<DST>
	l: 37	INSERT INTO ORDERS(oId, dId, wId, cId, entryDate, oLCnt, allLocal) VALUES (o_id, d_Id, w_Id, c_Id, date_time, o_ol_cnt, o_all_local);
	l: 40	INSERT INTO NEW_ORDER(oId, dId, wId) VALUES (o_id, d_Id, w_Id);
	l: 93	INSERT INTO ORDERLINE(oId, dId, wId, number, iId, supplyWId, quantity, amount, distInfo) VALUES (o_id, d_id, w_id, ol_number, ol_i_id, ol_supply_w_id, ol_quantity, ol_amount, ol_dist_info);
</DST>
</Relation>

<Relation ID="rw,DISTRICT(['dId','wId']).nextOrdId" SRC="neworder.sql" DST="neworder.sql" CONDITION=False >
<SRC>
	l: 27	SELECT DISTRICT.nextOrdId, DISTRICT.tax INTO d_next_o_id, d_tax FROM DISTRICT D WHERE DISTRICT.dId = d_id AND DISTRICT.wId = w_id;
</SRC>
<DST>
	l: 31	UPDATE DISTRICT SET nextOrdId = d_next_o_id + 1 WHERE DISTRICT.dId = d_id AND DISTRICT.wId = w_id;
</DST>
</Relation>

<Relation ID="ww,DISTRICT(['dId', 'wId']).nextOrdId" SRC="neworder.sql" DST="neworder.sql" CONDITION=False >
<SRC>
	l: 31	UPDATE DISTRICT SET nextOrdId = d_next_o_id + 1 WHERE DISTRICT.dId = d_id AND DISTRICT.wId = w_id;
</SRC>
<DST>
	l: 31	UPDATE DISTRICT SET nextOrdId = d_next_o_id + 1 WHERE DISTRICT.dId = d_id AND DISTRICT.wId = w_id;
</DST>
</Relation>

<Relation ID="wr,NEW_ORDER(*).*" SRC="neworder.sql" DST="delivery.sql" CONDITION=False >
<SRC>
	l: 37	INSERT INTO ORDERS(oId, dId, wId, cId, entryDate, oLCnt, allLocal) VALUES (o_id, d_Id, w_Id, c_Id, date_time, o_ol_cnt, o_all_local);
	l: 40	INSERT INTO NEW_ORDER(oId, dId, wId) VALUES (o_id, d_Id, w_Id);
	l: 93	INSERT INTO ORDERLINE(oId, dId, wId, number, iId, supplyWId, quantity, amount, distInfo) VALUES (o_id, d_id, w_id, ol_number, ol_i_id, ol_supply_w_id, ol_quantity, ol_amount, ol_dist_info);
</SRC>
<DST>
	l: 16	FOR d_id in 1 ..DIST_PER_WARE LOOP -- constant DIST_PER_WARE = 10  DECLARE c_no CURSOR FOR SELECT NEW_ORDER.oId FROM NEW_ORDER NO WHERE NEW_ORDER.dId = d_id AND NEW_ORDER.wId = w_id ORDER BY NEW_ORDER.oId ASC;
</DST>
</Relation>

<Relation ID="wr,ORDERS(*).*" SRC="neworder.sql" DST="delivery.sql" CONDITION=False >
<SRC>
	l: 37	INSERT INTO ORDERS(oId, dId, wId, cId, entryDate, oLCnt, allLocal) VALUES (o_id, d_Id, w_Id, c_Id, date_time, o_ol_cnt, o_all_local);
</SRC>
<DST>
	l: 28	SELECT ORDERS.cId INTO c_id FROM ORDERS O WHERE ORDERS.oId = no_o_id AND ORDERS.dId = d_id AND ORDERS.wId = w_id;
</DST>
</Relation>

<Relation ID="wr,ORDERLINE(*).*" SRC="neworder.sql" DST="delivery.sql" CONDITION=False >
<SRC>
	l: 93	INSERT INTO ORDERLINE(oId, dId, wId, number, iId, supplyWId, quantity, amount, distInfo) VALUES (o_id, d_id, w_id, ol_number, ol_i_id, ol_supply_w_id, ol_quantity, ol_amount, ol_dist_info);
</SRC>
<DST>
	l: 37	SELECT SUM(ORDERLINE.amount) INTO ol_total FROM ORDERLINE OL WHERE ORDERLINE.oId = no_o_id AND ORDERLINE.dId = d_id AND ORDERLINE.wId = w_id;
</DST>
</Relation>

<Relation ID="rw,ORDERS(*).*" SRC="delivery.sql" DST="neworder.sql" CONDITION=False >
<SRC>
	l: 28	SELECT ORDERS.cId INTO c_id FROM ORDERS O WHERE ORDERS.oId = no_o_id AND ORDERS.dId = d_id AND ORDERS.wId = w_id;
</SRC>
<DST>
	l: 37	INSERT INTO ORDERS(oId, dId, wId, cId, entryDate, oLCnt, allLocal) VALUES (o_id, d_Id, w_Id, c_Id, date_time, o_ol_cnt, o_all_local);
</DST>
</Relation>

<Relation ID="rw,NEW_ORDER(*).*" SRC="delivery.sql" DST="neworder.sql" CONDITION=False >
<SRC>
	l: 16	FOR d_id in 1 ..DIST_PER_WARE LOOP -- constant DIST_PER_WARE = 10  DECLARE c_no CURSOR FOR SELECT NEW_ORDER.oId FROM NEW_ORDER NO WHERE NEW_ORDER.dId = d_id AND NEW_ORDER.wId = w_id ORDER BY NEW_ORDER.oId ASC;
</SRC>
<DST>
	l: 37	INSERT INTO ORDERS(oId, dId, wId, cId, entryDate, oLCnt, allLocal) VALUES (o_id, d_Id, w_Id, c_Id, date_time, o_ol_cnt, o_all_local);
	l: 40	INSERT INTO NEW_ORDER(oId, dId, wId) VALUES (o_id, d_Id, w_Id);
	l: 93	INSERT INTO ORDERLINE(oId, dId, wId, number, iId, supplyWId, quantity, amount, distInfo) VALUES (o_id, d_id, w_id, ol_number, ol_i_id, ol_supply_w_id, ol_quantity, ol_amount, ol_dist_info);
</DST>
</Relation>

<Relation ID="rw,ORDERLINE(*).*" SRC="delivery.sql" DST="neworder.sql" CONDITION=False >
<SRC>
	l: 37	SELECT SUM(ORDERLINE.amount) INTO ol_total FROM ORDERLINE OL WHERE ORDERLINE.oId = no_o_id AND ORDERLINE.dId = d_id AND ORDERLINE.wId = w_id;
</SRC>
<DST>
	l: 93	INSERT INTO ORDERLINE(oId, dId, wId, number, iId, supplyWId, quantity, amount, distInfo) VALUES (o_id, d_id, w_id, ol_number, ol_i_id, ol_supply_w_id, ol_quantity, ol_amount, ol_dist_info);
</DST>
</Relation>

<Relation ID="ww,ORDERS(['oId', 'dId', 'wId']).carrierId" SRC="delivery.sql" DST="delivery.sql" CONDITION=False >
<SRC>
	l: 30	UPDATE ORDERS SET carrierId = o_carrier_id WHERE ORDERS.oId = no_o_id AND ORDERS.dId = d_id AND ORDERS.wId = w_id;
</SRC>
<DST>
	l: 30	UPDATE ORDERS SET carrierId = o_carrier_id WHERE ORDERS.oId = no_o_id AND ORDERS.dId = d_id AND ORDERS.wId = w_id;
</DST>
</Relation>

<Relation ID="ww,CUSTOMER(['cId', 'dId', 'wId']).deliveryCnt" SRC="delivery.sql" DST="delivery.sql" CONDITION=False >
<SRC>
	l: 44	-- added per transaction profile UPDATE CUSTOMER SET deliveryCnt = deliveryCnt + 1 WHERE CUSTOMER.cId = c_id AND CUSTOMER.dId = d_id AND CUSTOMER.wId = w_Id;
</SRC>
<DST>
	l: 44	-- added per transaction profile UPDATE CUSTOMER SET deliveryCnt = deliveryCnt + 1 WHERE CUSTOMER.cId = c_id AND CUSTOMER.dId = d_id AND CUSTOMER.wId = w_Id;
</DST>
</Relation>

<Relation ID="ww,CUSTOMER(['cId', 'dId', 'wId']).balance" SRC="delivery.sql" DST="delivery.sql" CONDITION=False >
<SRC>
	l: 40	UPDATE CUSTOMER SET balance = balance + ol_total WHERE CUSTOMER.cId = c_id AND CUSTOMER.dId = d_id AND CUSTOMER.wId = w_Id;
</SRC>
<DST>
	l: 40	UPDATE CUSTOMER SET balance = balance + ol_total WHERE CUSTOMER.cId = c_id AND CUSTOMER.dId = d_id AND CUSTOMER.wId = w_Id;
</DST>
</Relation>

<Relation ID="ww,ORDERLINE(['oId', 'dId', 'wId', 'number']).deliveryDate" SRC="delivery.sql" DST="delivery.sql" CONDITION=False >
<SRC>
	l: 33	UPDATE ORDERLINE SET deliveryDate = date_time WHERE ORDERLINE.oId = no_o_id AND ORDERLINE.dId = d_id AND ORDERLINE.wId = w_id;
</SRC>
<DST>
	l: 33	UPDATE ORDERLINE SET deliveryDate = date_time WHERE ORDERLINE.oId = no_o_id AND ORDERLINE.dId = d_id AND ORDERLINE.wId = w_id;
</DST>
</Relation>

<Relation ID="wr,CUSTOMER(['cId','dId','wId']).balance" SRC="delivery.sql" DST="payment.sql" CONDITION=False >
<SRC>
	l: 40	UPDATE CUSTOMER SET balance = balance + ol_total WHERE CUSTOMER.cId = c_id AND CUSTOMER.dId = d_id AND CUSTOMER.wId = w_Id;
</SRC>
<DST>
	l: 39	ELSE SELECT CUSTOMER.first, CUSTOMER.middle, CUSTOMER.last, CUSTOMER.str1, CUSTOMER.str2, CUSTOMER.city, CUSTOMER.state, CUSTOMER.zip, CUSTOMER.phone, CUSTOMER.credit, CUSTOMER.creditLim, CUSTOMER.discount,CUSTOMER.balance, CUSTOMER.since INTO c_first,c_middle,c_last, c_str1, c_str2, c_city, c_state, c_zip, c_phone, c_credit, c_creditLim, c_discount,c_balance,c_since FROM CUSTOMER C WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
	l: 39	DECLARE c_byname CURSOR FOR SELECT CUSTOMER.first, CUSTOMER.middle, CUSTOMER.cId, CUSTOMER.str1, CUSTOMER.str2, CUSTOMER.city, CUSTOMER.state, CUSTOMER.zip, CUSTOMER.phone, CUSTOMER.credit, CUSTOMER.creditLim, CUSTOMER.discount,CUSTOMER.balance, CUSTOMER.since FROM CUSTOMER C WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.last = c_last ORDER BY CUSTOMER.first;
</DST>
</Relation>

<Relation ID="ww,CUSTOMER(['cId', 'dId', 'wId']).paymtCnt" SRC="payment.sql" DST="payment.sql" CONDITION=False >
<SRC>
	l: 95	UPDATE CUSTOMER SET paymtCnt = paymtCnt + 1 WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
</SRC>
<DST>
	l: 95	UPDATE CUSTOMER SET paymtCnt = paymtCnt + 1 WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
</DST>
</Relation>

<Relation ID="ww,WAREHOUSE(['wId']).wYTD" SRC="payment.sql" DST="payment.sql" CONDITION=False >
<SRC>
	l: 35	UPDATE WAREHOUSE SET wYTD = wYTD + h_amount WHERE WAREHOUSE.wId = w_id;
</SRC>
<DST>
	l: 35	UPDATE WAREHOUSE SET wYTD = wYTD + h_amount WHERE WAREHOUSE.wId = w_id;
</DST>
</Relation>

<Relation ID="ww,HISTORY(*).*" SRC="payment.sql" DST="payment.sql" CONDITION=False >
<SRC>
	l: 126	INSERT INTO HISTORY(cDId, cWId, cId, dId, wId, date, amount, data) VALUES (c_d_id, w_id, c_id, c_d_id, w_id, datetime, c_amount, c_data);
</SRC>
<DST>
	l: 126	INSERT INTO HISTORY(cDId, cWId, cId, dId, wId, date, amount, data) VALUES (c_d_id, w_id, c_id, c_d_id, w_id, datetime, c_amount, c_data);
</DST>
</Relation>

<Relation ID="ww,DISTRICT(['dId', 'wId']).dYTD" SRC="payment.sql" DST="payment.sql" CONDITION=False >
<SRC>
	l: 43	UPDATE DISTRICT SET dYTD = dYTD + h_amount WHERE DISTRICT.wId = w_id AND DISTRICT.dId = d_id;
</SRC>
<DST>
	l: 43	UPDATE DISTRICT SET dYTD = dYTD + h_amount WHERE DISTRICT.wId = w_id AND DISTRICT.dId = d_id;
</DST>
</Relation>

<Relation ID="rw,CUSTOMER(['cId','dId','wId']).balance" SRC="orderstatus.sql" DST="delivery.sql" CONDITION=True >
<SRC>
	l: 18	DECLARE c_name CURSOR FOR SELECT CUSTOMER.balance, CUSTOMER.first, CUSTOMER.middle, CUSTOMER.cId FROM CUSTOMER C WHERE CUSTOMER.last = c_last AND CUSTOMER.dId = d_id AND CUSTOMER.wId = w_id ORDER BY CUSTOMER.first;
	l: 18	ELSE SELECT CUSTOMER.balance, CUSTOMER.first, CUSTOMER.middle, CUSTOMER.last INTO c_balance, c_first, c_middle, c_last FROM CUSTOMER C WHERE CUSTOMER.cId = c_id AND CUSTOMER.dId = d_id AND CUSTOMER.wId = w_Id;
</SRC>
<DST>
	l: 40	UPDATE CUSTOMER SET balance = balance + ol_total WHERE CUSTOMER.cId = c_id AND CUSTOMER.dId = d_id AND CUSTOMER.wId = w_Id;
</DST>
</Relation>

<Relation ID="ww,CUSTOMER(['cId', 'dId', 'wId']).data" SRC="payment.sql" DST="payment.sql" CONDITION=True >
<SRC>
	l: 107	UPDATE CUSTOMER SET balance = c_balance, data = c_new_data WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
</SRC>
<DST>
	l: 107	UPDATE CUSTOMER SET balance = c_balance, data = c_new_data WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
</DST>
</Relation>

<Relation ID="wr,CUSTOMER(['cId','dId','wId']).balance" SRC="payment.sql" DST="payment.sql" CONDITION=True >
<SRC>
	l: 107	UPDATE CUSTOMER SET balance = c_balance, data = c_new_data WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
	l: 111	ELSE UPDATE CUSTOMER SET balance = c_balance WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
</SRC>
<DST>
	l: 39	ELSE SELECT CUSTOMER.first, CUSTOMER.middle, CUSTOMER.last, CUSTOMER.str1, CUSTOMER.str2, CUSTOMER.city, CUSTOMER.state, CUSTOMER.zip, CUSTOMER.phone, CUSTOMER.credit, CUSTOMER.creditLim, CUSTOMER.discount,CUSTOMER.balance, CUSTOMER.since INTO c_first,c_middle,c_last, c_str1, c_str2, c_city, c_state, c_zip, c_phone, c_credit, c_creditLim, c_discount,c_balance,c_since FROM CUSTOMER C WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
	l: 39	DECLARE c_byname CURSOR FOR SELECT CUSTOMER.first, CUSTOMER.middle, CUSTOMER.cId, CUSTOMER.str1, CUSTOMER.str2, CUSTOMER.city, CUSTOMER.state, CUSTOMER.zip, CUSTOMER.phone, CUSTOMER.credit, CUSTOMER.creditLim, CUSTOMER.discount,CUSTOMER.balance, CUSTOMER.since FROM CUSTOMER C WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.last = c_last ORDER BY CUSTOMER.first;
</DST>
</Relation>

<Relation ID="ww,CUSTOMER(['cId', 'dId', 'wId']).balance" SRC="payment.sql" DST="payment.sql" CONDITION=True >
<SRC>
	l: 107	UPDATE CUSTOMER SET balance = c_balance, data = c_new_data WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
	l: 111	ELSE UPDATE CUSTOMER SET balance = c_balance WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
</SRC>
<DST>
	l: 107	UPDATE CUSTOMER SET balance = c_balance, data = c_new_data WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
	l: 111	ELSE UPDATE CUSTOMER SET balance = c_balance WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
</DST>
</Relation>

<Relation ID="rw,CUSTOMER(['cId','dId','wId']).balance" SRC="payment.sql" DST="payment.sql" CONDITION=True >
<SRC>
	l: 39	ELSE SELECT CUSTOMER.first, CUSTOMER.middle, CUSTOMER.last, CUSTOMER.str1, CUSTOMER.str2, CUSTOMER.city, CUSTOMER.state, CUSTOMER.zip, CUSTOMER.phone, CUSTOMER.credit, CUSTOMER.creditLim, CUSTOMER.discount,CUSTOMER.balance, CUSTOMER.since INTO c_first,c_middle,c_last, c_str1, c_str2, c_city, c_state, c_zip, c_phone, c_credit, c_creditLim, c_discount,c_balance,c_since FROM CUSTOMER C WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
	l: 39	DECLARE c_byname CURSOR FOR SELECT CUSTOMER.first, CUSTOMER.middle, CUSTOMER.cId, CUSTOMER.str1, CUSTOMER.str2, CUSTOMER.city, CUSTOMER.state, CUSTOMER.zip, CUSTOMER.phone, CUSTOMER.credit, CUSTOMER.creditLim, CUSTOMER.discount,CUSTOMER.balance, CUSTOMER.since FROM CUSTOMER C WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.last = c_last ORDER BY CUSTOMER.first;
</SRC>
<DST>
	l: 107	UPDATE CUSTOMER SET balance = c_balance, data = c_new_data WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
	l: 111	ELSE UPDATE CUSTOMER SET balance = c_balance WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
</DST>
</Relation>

<Relation ID="wr,CUSTOMER(['cId','dId','wId']).balance" SRC="delivery.sql" DST="orderstatus.sql" CONDITION=True >
<SRC>
	l: 40	UPDATE CUSTOMER SET balance = balance + ol_total WHERE CUSTOMER.cId = c_id AND CUSTOMER.dId = d_id AND CUSTOMER.wId = w_Id;
</SRC>
<DST>
	l: 18	DECLARE c_name CURSOR FOR SELECT CUSTOMER.balance, CUSTOMER.first, CUSTOMER.middle, CUSTOMER.cId FROM CUSTOMER C WHERE CUSTOMER.last = c_last AND CUSTOMER.dId = d_id AND CUSTOMER.wId = w_id ORDER BY CUSTOMER.first;
	l: 18	ELSE SELECT CUSTOMER.balance, CUSTOMER.first, CUSTOMER.middle, CUSTOMER.last INTO c_balance, c_first, c_middle, c_last FROM CUSTOMER C WHERE CUSTOMER.cId = c_id AND CUSTOMER.dId = d_id AND CUSTOMER.wId = w_Id;
</DST>
</Relation>

<Relation ID="wr,CUSTOMER(['cId','dId','wId']).balance" SRC="payment.sql" DST="orderstatus.sql" CONDITION=True >
<SRC>
	l: 107	UPDATE CUSTOMER SET balance = c_balance, data = c_new_data WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
	l: 111	ELSE UPDATE CUSTOMER SET balance = c_balance WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
</SRC>
<DST>
	l: 18	DECLARE c_name CURSOR FOR SELECT CUSTOMER.balance, CUSTOMER.first, CUSTOMER.middle, CUSTOMER.cId FROM CUSTOMER C WHERE CUSTOMER.last = c_last AND CUSTOMER.dId = d_id AND CUSTOMER.wId = w_id ORDER BY CUSTOMER.first;
	l: 18	ELSE SELECT CUSTOMER.balance, CUSTOMER.first, CUSTOMER.middle, CUSTOMER.last INTO c_balance, c_first, c_middle, c_last FROM CUSTOMER C WHERE CUSTOMER.cId = c_id AND CUSTOMER.dId = d_id AND CUSTOMER.wId = w_Id;
</DST>
</Relation>

<Relation ID="wr,CUSTOMER(['cId','dId','wId']).balance" SRC="delivery.sql" DST="payment.sql" CONDITION=True >
<SRC>
	l: 40	UPDATE CUSTOMER SET balance = balance + ol_total WHERE CUSTOMER.cId = c_id AND CUSTOMER.dId = d_id AND CUSTOMER.wId = w_Id;
</SRC>
<DST>
	l: 39	ELSE SELECT CUSTOMER.first, CUSTOMER.middle, CUSTOMER.last, CUSTOMER.str1, CUSTOMER.str2, CUSTOMER.city, CUSTOMER.state, CUSTOMER.zip, CUSTOMER.phone, CUSTOMER.credit, CUSTOMER.creditLim, CUSTOMER.discount,CUSTOMER.balance, CUSTOMER.since INTO c_first,c_middle,c_last, c_str1, c_str2, c_city, c_state, c_zip, c_phone, c_credit, c_creditLim, c_discount,c_balance,c_since FROM CUSTOMER C WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.cId = c_id;
	l: 39	DECLARE c_byname CURSOR FOR SELECT CUSTOMER.first, CUSTOMER.middle, CUSTOMER.cId, CUSTOMER.str1, CUSTOMER.str2, CUSTOMER.city, CUSTOMER.state, CUSTOMER.zip, CUSTOMER.phone, CUSTOMER.credit, CUSTOMER.creditLim, CUSTOMER.discount,CUSTOMER.balance, CUSTOMER.since FROM CUSTOMER C WHERE CUSTOMER.wId = w_id AND CUSTOMER.dId = c_d_id AND CUSTOMER.last = c_last ORDER BY CUSTOMER.first;
</DST>
</Relation>

<Relation ID="wr,ITEMS(['iId']).nbids" SRC="StoreBId.sql" DST="ViewItem.sql" CONDITION=False >
<SRC>
	l: 14	UPDATE ITEMS SET nbids = n + 1 WHERE ITEMS.iId = i_id;
</SRC>
<DST>
	l: 12	SELECT ITEMS.nbids FROM ITEMS I WHERE ITEMS.iId = i_id;
</DST>
</Relation>

